/*!
 * json-schema-view
 * https://github.com/mohsen1/json-schema-view
 * Version: 0.3.8 - 2014-10-21T20:17:10.821Z
 * License: MIT
 */
"use strict";var module=angular.module("mohsen1.json-schema-view",["RecursionHelper"]);module.directive("jsonSchemaView",function(s){function e(s){s.isCollapsed=s.open<1,s.isArray=s.schema&&"array"===s.schema.type,s.isPrimitive=s.schema&&!s.schema.properties&&!s.schema.items&&"array"!==s.schema.type&&"object"!==s.schema.type,s.toggle=function(){s.isCollapsed=!s.isCollapsed},s.isRequired=function(e){var a=s.$parent.schema;return a&&Array.isArray(a.required)&&e.name?a.required.indexOf(e.name)>-1:!1},s.isPrimitiveCollapsible=function(){return s.schema.description||s.schema.title}}return{restrict:"E",templateUrl:"json-schema-view.html",replcae:!0,scope:{schema:"=",open:"="},compile:function(a){return s.compile(a,e)}}}),angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(s){return{compile:function(e,a){angular.isFunction(a)&&(a={post:a});var i,n=e.contents().remove();return{pre:a&&a.pre?a.pre:null,post:function(e,c){i||(i=s(n)),i(e,function(s){c.append(s)}),a&&a.post&&a.post.apply(null,arguments)}}}}}]),angular.module("mohsen1.json-schema-view").run(["$templateCache",function(s){s.put("json-schema-view.html",'<div class="json-schema-view" ng-class="{collapsed: isCollapsed}"><div class="primitive" ng-if="isPrimitive"><a class="title" ng-click="toggle()"><span class="toggler" ng-if="isPrimitiveCollapsible()"></span>{{schema.title}}</a> <span class="type">{{schema.type}}</span> <span class="required" ng-if="isRequired(schema)">*</span> <span class="format" ng-if="!isCollapsed && schema.format">({{schema.format}})</span> <span class="range minimum" ng-if="!isCollapsed && schema.minimum">minimum:{{schema.minimum}}</span> <span class="range maximum" ng-if="!isCollapsed && schema.maximum">maximum:{{schema.maximum}}</span><div class="description">{{schema.description}}</div></div><div ng-if="isArray" class="array"><a class="title" ng-click="toggle()"><span class="toggler"></span>{{schema.title}} <span class="opening bracket">[</span><span class="closing bracket" ng-if="isCollapsed">]</span></a><div class="inner"><div class="description">{{schema.description}}</div><json-schema-view ng-if="!isCollapsed" schema="schema.items" open="open - 1"></json-schema-view></div><span class="closing bracket" ng-if="!isCollapsed">]</span></div><div ng-if="!isPrimitive && !isArray" class="object"><a class="title" ng-click="toggle()"><span class="toggler"></span>{{schema.title}} <span class="opening brace">{</span><span class="closing brace" ng-if="isCollapsed">}</span></a><div class="inner"><div class="description">{{schema.description}}</div><div class="property" ng-repeat="(propertyName, property) in schema.properties"><span class="name">{{propertyName}}:</span><json-schema-view schema="property" open="open - 1"></json-schema-view></div></div><span class="closeing brace" ng-if="!isCollapsed">}</span></div></div>')}]);